name: CI

on:
  push:
    branches:
      - main
    tags: [ '[0-9]+.[0-9]+.[0-9]+*' ]
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-18.04
    timeout-minutes: 15
    permissions:
      contents: read
    strategy:
      matrix:
        dotnet: ['6.0.x']
      fail-fast: true
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET Core ${{ matrix.dotnet }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - name: Install Dependencies
      run: dotnet restore ${{ github.workspace }}/Source/Evento.sln
    - name: Check Formatting
      run: dotnet format --no-restore --verify-no-changes --severity warn ./Source/Evento.sln || (echo "Run 'dotnet format' to fix issues" && exit 1)
    - name: Build
      run: dotnet build ${{ github.workspace }}/Source/Evento.sln --configuration Release
    - name: UnitTests
      run: |
        cd ${{ github.workspace }}/Source/Evento.UnitTests
        dotnet test --configuration Release --no-build

  publish-to-github-docker-registry:
    name: Publish To Github Docker Registry
    runs-on: ubuntu-18.04
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Log in to the registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v3.0.0
        with:
          context: './Source/Evento'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-to-github-nuget:
    name: Publish to NuGet
    runs-on: ubuntu-18.04
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET Core ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore ${{ github.workspace }}/Source/EasyNetQ.sln
      - name: Build
        run: dotnet build ${{ github.workspace }}/Source/EasyNetQ.sln --configuration Release
      - name: Pack
        run: dotnet pack ${{ github.workspace }}/Source/EasyNetQ.sln --configuration Release --no-build --include-symbols --output ${{ github.workspace }}/Packages
      - name: Add Source
        run: dotnet nuget add source --username Pliner --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Pliner/index.json"
      - name: Push
        run: dotnet nuget push '${{ github.workspace }}/Packages/*.*' --source github --api-key ${{ secrets.GITHUB_TOKEN }}
